/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AdminUserIndexRouteImport } from './routes/admin/user/index'
import { Route as AdminTeacherIndexRouteImport } from './routes/admin/teacher/index'
import { Route as AdminStudentIndexRouteImport } from './routes/admin/student/index'
import { Route as AdminSettingIndexRouteImport } from './routes/admin/setting/index'
import { Route as AdminMajorIndexRouteImport } from './routes/admin/major/index'
import { Route as AdminLevelIndexRouteImport } from './routes/admin/level/index'
import { Route as AdminGenerationIndexRouteImport } from './routes/admin/generation/index'
import { Route as AdminFacultyIndexRouteImport } from './routes/admin/faculty/index'
import { Route as AdminDashboardIndexRouteImport } from './routes/admin/dashboard/index'
import { Route as AdminClassesIndexRouteImport } from './routes/admin/classes/index'
import { Route as AdminTeacherTeacherIdRouteImport } from './routes/admin/teacher/$teacherId'
import { Route as AdminDashboardIndexcopyRouteImport } from './routes/admin/dashboard/index copy'
import { Route as AdminClassesScheduleScheduleIdRouteImport } from './routes/admin/classes/schedule/$scheduleId'
import { Route as AdminClassesAttendanceAttendanceIdRouteImport } from './routes/admin/classes/attendance/$attendanceId'
import { Route as AdminClassesAttendanceReportAttendanceReportIdRouteImport } from './routes/admin/classes/attendance/report/$attendanceReportId'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AdminUserIndexRoute = AdminUserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminTeacherIndexRoute = AdminTeacherIndexRouteImport.update({
  id: '/teacher/',
  path: '/teacher/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminStudentIndexRoute = AdminStudentIndexRouteImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingIndexRoute = AdminSettingIndexRouteImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminMajorIndexRoute = AdminMajorIndexRouteImport.update({
  id: '/major/',
  path: '/major/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminLevelIndexRoute = AdminLevelIndexRouteImport.update({
  id: '/level/',
  path: '/level/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminGenerationIndexRoute = AdminGenerationIndexRouteImport.update({
  id: '/generation/',
  path: '/generation/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminFacultyIndexRoute = AdminFacultyIndexRouteImport.update({
  id: '/faculty/',
  path: '/faculty/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDashboardIndexRoute = AdminDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminClassesIndexRoute = AdminClassesIndexRouteImport.update({
  id: '/classes/',
  path: '/classes/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminTeacherTeacherIdRoute = AdminTeacherTeacherIdRouteImport.update({
  id: '/teacher/$teacherId',
  path: '/teacher/$teacherId',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDashboardIndexcopyRoute = AdminDashboardIndexcopyRouteImport.update({
  id: '/dashboard/index copy',
  path: '/dashboard/index copy',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminClassesScheduleScheduleIdRoute =
  AdminClassesScheduleScheduleIdRouteImport.update({
    id: '/classes/schedule/$scheduleId',
    path: '/classes/schedule/$scheduleId',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminClassesAttendanceAttendanceIdRoute =
  AdminClassesAttendanceAttendanceIdRouteImport.update({
    id: '/classes/attendance/$attendanceId',
    path: '/classes/attendance/$attendanceId',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminClassesAttendanceReportAttendanceReportIdRoute =
  AdminClassesAttendanceReportAttendanceReportIdRouteImport.update({
    id: '/classes/attendance/report/$attendanceReportId',
    path: '/classes/attendance/report/$attendanceReportId',
    getParentRoute: () => AdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/admin/dashboard/index copy': typeof AdminDashboardIndexcopyRoute
  '/admin/teacher/$teacherId': typeof AdminTeacherTeacherIdRoute
  '/admin/classes': typeof AdminClassesIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/faculty': typeof AdminFacultyIndexRoute
  '/admin/generation': typeof AdminGenerationIndexRoute
  '/admin/level': typeof AdminLevelIndexRoute
  '/admin/major': typeof AdminMajorIndexRoute
  '/admin/setting': typeof AdminSettingIndexRoute
  '/admin/student': typeof AdminStudentIndexRoute
  '/admin/teacher': typeof AdminTeacherIndexRoute
  '/admin/user': typeof AdminUserIndexRoute
  '/admin/classes/attendance/$attendanceId': typeof AdminClassesAttendanceAttendanceIdRoute
  '/admin/classes/schedule/$scheduleId': typeof AdminClassesScheduleScheduleIdRoute
  '/admin/classes/attendance/report/$attendanceReportId': typeof AdminClassesAttendanceReportAttendanceReportIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/admin/dashboard/index copy': typeof AdminDashboardIndexcopyRoute
  '/admin/teacher/$teacherId': typeof AdminTeacherTeacherIdRoute
  '/admin/classes': typeof AdminClassesIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/faculty': typeof AdminFacultyIndexRoute
  '/admin/generation': typeof AdminGenerationIndexRoute
  '/admin/level': typeof AdminLevelIndexRoute
  '/admin/major': typeof AdminMajorIndexRoute
  '/admin/setting': typeof AdminSettingIndexRoute
  '/admin/student': typeof AdminStudentIndexRoute
  '/admin/teacher': typeof AdminTeacherIndexRoute
  '/admin/user': typeof AdminUserIndexRoute
  '/admin/classes/attendance/$attendanceId': typeof AdminClassesAttendanceAttendanceIdRoute
  '/admin/classes/schedule/$scheduleId': typeof AdminClassesScheduleScheduleIdRoute
  '/admin/classes/attendance/report/$attendanceReportId': typeof AdminClassesAttendanceReportAttendanceReportIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/admin/dashboard/index copy': typeof AdminDashboardIndexcopyRoute
  '/admin/teacher/$teacherId': typeof AdminTeacherTeacherIdRoute
  '/admin/classes/': typeof AdminClassesIndexRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/faculty/': typeof AdminFacultyIndexRoute
  '/admin/generation/': typeof AdminGenerationIndexRoute
  '/admin/level/': typeof AdminLevelIndexRoute
  '/admin/major/': typeof AdminMajorIndexRoute
  '/admin/setting/': typeof AdminSettingIndexRoute
  '/admin/student/': typeof AdminStudentIndexRoute
  '/admin/teacher/': typeof AdminTeacherIndexRoute
  '/admin/user/': typeof AdminUserIndexRoute
  '/admin/classes/attendance/$attendanceId': typeof AdminClassesAttendanceAttendanceIdRoute
  '/admin/classes/schedule/$scheduleId': typeof AdminClassesScheduleScheduleIdRoute
  '/admin/classes/attendance/report/$attendanceReportId': typeof AdminClassesAttendanceReportAttendanceReportIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/admin/dashboard/index copy'
    | '/admin/teacher/$teacherId'
    | '/admin/classes'
    | '/admin/dashboard'
    | '/admin/faculty'
    | '/admin/generation'
    | '/admin/level'
    | '/admin/major'
    | '/admin/setting'
    | '/admin/student'
    | '/admin/teacher'
    | '/admin/user'
    | '/admin/classes/attendance/$attendanceId'
    | '/admin/classes/schedule/$scheduleId'
    | '/admin/classes/attendance/report/$attendanceReportId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/admin/dashboard/index copy'
    | '/admin/teacher/$teacherId'
    | '/admin/classes'
    | '/admin/dashboard'
    | '/admin/faculty'
    | '/admin/generation'
    | '/admin/level'
    | '/admin/major'
    | '/admin/setting'
    | '/admin/student'
    | '/admin/teacher'
    | '/admin/user'
    | '/admin/classes/attendance/$attendanceId'
    | '/admin/classes/schedule/$scheduleId'
    | '/admin/classes/attendance/report/$attendanceReportId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/admin/dashboard/index copy'
    | '/admin/teacher/$teacherId'
    | '/admin/classes/'
    | '/admin/dashboard/'
    | '/admin/faculty/'
    | '/admin/generation/'
    | '/admin/level/'
    | '/admin/major/'
    | '/admin/setting/'
    | '/admin/student/'
    | '/admin/teacher/'
    | '/admin/user/'
    | '/admin/classes/attendance/$attendanceId'
    | '/admin/classes/schedule/$scheduleId'
    | '/admin/classes/attendance/report/$attendanceReportId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/admin/user/': {
      id: '/admin/user/'
      path: '/user'
      fullPath: '/admin/user'
      preLoaderRoute: typeof AdminUserIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/teacher/': {
      id: '/admin/teacher/'
      path: '/teacher'
      fullPath: '/admin/teacher'
      preLoaderRoute: typeof AdminTeacherIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/student/': {
      id: '/admin/student/'
      path: '/student'
      fullPath: '/admin/student'
      preLoaderRoute: typeof AdminStudentIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/setting/': {
      id: '/admin/setting/'
      path: '/setting'
      fullPath: '/admin/setting'
      preLoaderRoute: typeof AdminSettingIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/major/': {
      id: '/admin/major/'
      path: '/major'
      fullPath: '/admin/major'
      preLoaderRoute: typeof AdminMajorIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/level/': {
      id: '/admin/level/'
      path: '/level'
      fullPath: '/admin/level'
      preLoaderRoute: typeof AdminLevelIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/generation/': {
      id: '/admin/generation/'
      path: '/generation'
      fullPath: '/admin/generation'
      preLoaderRoute: typeof AdminGenerationIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/faculty/': {
      id: '/admin/faculty/'
      path: '/faculty'
      fullPath: '/admin/faculty'
      preLoaderRoute: typeof AdminFacultyIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/classes/': {
      id: '/admin/classes/'
      path: '/classes'
      fullPath: '/admin/classes'
      preLoaderRoute: typeof AdminClassesIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/teacher/$teacherId': {
      id: '/admin/teacher/$teacherId'
      path: '/teacher/$teacherId'
      fullPath: '/admin/teacher/$teacherId'
      preLoaderRoute: typeof AdminTeacherTeacherIdRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/dashboard/index copy': {
      id: '/admin/dashboard/index copy'
      path: '/dashboard/index copy'
      fullPath: '/admin/dashboard/index copy'
      preLoaderRoute: typeof AdminDashboardIndexcopyRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/classes/schedule/$scheduleId': {
      id: '/admin/classes/schedule/$scheduleId'
      path: '/classes/schedule/$scheduleId'
      fullPath: '/admin/classes/schedule/$scheduleId'
      preLoaderRoute: typeof AdminClassesScheduleScheduleIdRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/classes/attendance/$attendanceId': {
      id: '/admin/classes/attendance/$attendanceId'
      path: '/classes/attendance/$attendanceId'
      fullPath: '/admin/classes/attendance/$attendanceId'
      preLoaderRoute: typeof AdminClassesAttendanceAttendanceIdRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/classes/attendance/report/$attendanceReportId': {
      id: '/admin/classes/attendance/report/$attendanceReportId'
      path: '/classes/attendance/report/$attendanceReportId'
      fullPath: '/admin/classes/attendance/report/$attendanceReportId'
      preLoaderRoute: typeof AdminClassesAttendanceReportAttendanceReportIdRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminDashboardIndexcopyRoute: typeof AdminDashboardIndexcopyRoute
  AdminTeacherTeacherIdRoute: typeof AdminTeacherTeacherIdRoute
  AdminClassesIndexRoute: typeof AdminClassesIndexRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminFacultyIndexRoute: typeof AdminFacultyIndexRoute
  AdminGenerationIndexRoute: typeof AdminGenerationIndexRoute
  AdminLevelIndexRoute: typeof AdminLevelIndexRoute
  AdminMajorIndexRoute: typeof AdminMajorIndexRoute
  AdminSettingIndexRoute: typeof AdminSettingIndexRoute
  AdminStudentIndexRoute: typeof AdminStudentIndexRoute
  AdminTeacherIndexRoute: typeof AdminTeacherIndexRoute
  AdminUserIndexRoute: typeof AdminUserIndexRoute
  AdminClassesAttendanceAttendanceIdRoute: typeof AdminClassesAttendanceAttendanceIdRoute
  AdminClassesScheduleScheduleIdRoute: typeof AdminClassesScheduleScheduleIdRoute
  AdminClassesAttendanceReportAttendanceReportIdRoute: typeof AdminClassesAttendanceReportAttendanceReportIdRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminDashboardIndexcopyRoute: AdminDashboardIndexcopyRoute,
  AdminTeacherTeacherIdRoute: AdminTeacherTeacherIdRoute,
  AdminClassesIndexRoute: AdminClassesIndexRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminFacultyIndexRoute: AdminFacultyIndexRoute,
  AdminGenerationIndexRoute: AdminGenerationIndexRoute,
  AdminLevelIndexRoute: AdminLevelIndexRoute,
  AdminMajorIndexRoute: AdminMajorIndexRoute,
  AdminSettingIndexRoute: AdminSettingIndexRoute,
  AdminStudentIndexRoute: AdminStudentIndexRoute,
  AdminTeacherIndexRoute: AdminTeacherIndexRoute,
  AdminUserIndexRoute: AdminUserIndexRoute,
  AdminClassesAttendanceAttendanceIdRoute:
    AdminClassesAttendanceAttendanceIdRoute,
  AdminClassesScheduleScheduleIdRoute: AdminClassesScheduleScheduleIdRoute,
  AdminClassesAttendanceReportAttendanceReportIdRoute:
    AdminClassesAttendanceReportAttendanceReportIdRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
